clear all;
close all;

t = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,8,8,9,9,9,10,11,11,11,11,12,12,12,15,15,15,17,17,17,17,17,17,18,18,18,18,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,28,28,28,28,28,28,28,28,28,28,32,32,32,32,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,35,35,35,38,38,38,38,38,38,38,38,40,40,40,40,40,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,51,51,51,51,51,51,51,51,51,51,51,51,51,51,55,55,56,56,56,56,56,57,57,57,57,57,57,57,57,57,58,60,61,61,61,61,61,61,61,61,61,62,63,63,63,63,63,63,63,63,63,63,63,63,63,64,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,72,72,74,74,74,74,74,74,74,74,74,77,78,78,78,78,78,78,79,79,79,79,79,80,80,80,80,80,80,80,80,80,81,84,84,84,84,84,84,84,86,87,87,87,87,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,97,97,97,97,97,97,97,97,97,100,100,100,101,101,101,101,101,101,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103,103,103,103,103,103,104,104,104,104,107,107,107,107,107,107,108,108,109,109,109,109,109,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,122];
o = [15,22,29,42,43,44,45,46,47,48,49,50,51,8,81,31,32,38,39,45,46,49,51,53,55,58,60,62,63,65,67,70,72,74,76,59,8,80,84,56,77,49,57,70,57,10,57,67,78,5,56,77,56,77,8,31,39,45,63,64,65,30,38,46,67,10,16,17,19,21,24,37,38,42,44,54,56,58,68,69,70,83,89,39,15,25,42,45,49,55,59,63,75,80,46,53,60,72,24,41,44,46,53,58,60,72,13,21,24,26,41,44,46,53,58,60,72,79,46,60,72,25,42,45,49,59,63,75,80,17,18,19,68,83,10,21,36,39,47,48,50,51,61,62,64,65,69,73,74,76,77,11,15,17,19,21,23,25,28,30,32,34,36,38,40,41,43,45,47,50,51,52,53,56,59,60,62,64,66,69,72,73,75,77,11,13,16,20,24,29,33,37,56,58,69,71,8,82,14,27,10,14,27,55,68,10,14,27,45,55,64,68,77,80,5,89,0,11,13,56,58,69,71,8,89,89,41,42,43,50,51,52,53,60,61,62,73,74,75,77,21,22,36,37,46,48,51,53,56,58,6,60,61,64,65,72,73,74,23,38,41,43,47,52,56,61,65,68,83,58,45,50,58,61,65,71,45,50,55,59,63,10,25,40,45,50,55,58,67,75,80,41,43,56,60,64,68,83,6,20,23,35,38,19,45,46,48,50,55,57,59,61,63,65,67,69,71,73,76,78,11,15,20,24,32,40,7,77,83,28,34,42,12,21,28,34,42,75,12,19,21,28,34,42,75,12,19,21,28,35,43,5,50,59,66,67,74,75,12,21,28,80,15,20,24,66,74,83,0,89,46,47,48,55,57,13,14,16,17,22,23,25,26,29,30,32,33,34,37,38,40,41,42,50,45];
x = [t;o];
N = length(x); % Total number of coordinates
D = zeros(N,N); % Creating distance matrix of N*N

% generating matrix
for i=1:N-1
    for j=i+1:N
        D(i,j)=norm(x(:,i)-x(:,j));
        D(j,i)=D(i,j);
    end
end


s = randperm(N); % Initial solution
sinit = s;
distance = tour_calculation(s,D); % calculating distance
d_list = distance; p_list = [];
factor = 10; 
epochs = 100000;
for i=1:epochs
     id = randperm(N,2);
     id = sort(id);
     snext = s;

     snext(id(1):id(2))=s(id(2):-1:id(1));% Swapping

     distance_next = tour_calculation(snext,D);
     E = distance-distance_next; % to check for minimum direction
     T = factor/(i);
     prob = 1/(1+exp(-E/T));
     %pE = exp(-E/(T));
     if E>0 
         s = snext;
     else
         ra = rand;
          if ra < prob 
                s = snext;
          end
     end
     distance = tour_calculation(s,D);
     d_list = [d_list, distance];
     p_list = [p_list, prob];
 

 
end 


% plotting graphs for Inital path and Path found by simulated annealing
x0=10;
y0=10;
width=1200;
height=400;
set(gcf,'position',[x0,y0,width,height])

figure(1);
subplot(1,2,1);
axis([0 1 0 1]);plot(x(1,[sinit sinit(1)]),x(2,[sinit sinit(1)]),'-o')
title('Initial Path')
xlabel('x-axis')
ylabel('y-axis')
legend('Connecting paths');
subplot(1,2,2);
axis([0 1 0 1]);



plot(x(1,[s s(1)]),x(2,[s s(1)]),'-o',x(1,s(1)),x(2,s(1)),'r-*');
title('Path after Simulated Annealing algo applied');
xlabel('x-axis');
ylabel('y-axis');
legend('Connecting paths','Start Node');

% Distance calculation / path cost for a tour s
% function for tour calculation
function [dis] = tour_calculation(s,D)
    [N,M] = size(D);
    dis = 0;
    for i=1:N-1
     dis = dis + D(s(i),s(i+1));
    end
    dis = dis + D(s(N),s(1));
end